# This file was automatically converted from Perl to Python
# by the Perl to Python Conversion Agent
# Conversion date: 2025-08-09 22:46:25
# Note: This is an automated conversion and may require manual review

#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Generated by Perl to Python Converter

# Scalar::Util functions implemented inline


# Implementation of Perl's looks_like_number function
def looks_like_number(s):
    try:
        float(s)
    return True
    except (ValueError, TypeError):
    return False
    if __name__ == '__main__':
        import sys

    # Get inputs from command line or ask interactively
    num1, num2 = sys.argv[1:] if len(sys.argv) > 2 else (None, None)

    if not (num1 is not None  and  num2 is not None):
        print(f"Enter first number: ")
        num1 = input().rstrip()

        print(f"Enter second number: ")
        num2 = input().rstrip()

    # Validate inputs
    if not (looks_like_number(num1)):
        raise Exception(f"Error: First input '{num1}' is not a valid number.\n")

        if not (looks_like_number(num2)):
            raise Exception(f"Error: Second input '{num2}' is not a valid number.\n")

        # Perform addition
        sum = float(num1) + float(num2)

    # Output the result
    print(f"The {sum} of {num1} and {num2} is: {sum}\n")