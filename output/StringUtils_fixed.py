# This file was automatically converted from Perl to Python
# by the Perl to Python Conversion Agent
# Conversion date: 2025-08-09 22:46:25
# Note: This is an automated conversion and may require manual review

#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Generated by Perl to Python Converter

# Python doesn't need Exporter, modules export all symbols by default

# Perl package: StringUtils
# In Python, we use modules instead of packages

def to_uppercase(input):
    # Check if input is defined
    if input is None:
        raise Exception(f"Error: No input string provided.\n")

    # Check if it's a string (scalar)
    if not ( not ref(input)):
        raise Exception(f"Error: Input must be a scalar string.\n")

        # Convert to uppercase
        upper = str.upper(input)
        return upper


    # Implementation of Perl's ref function
    def ref(obj):
        if obj is None:
        return ""
        elif isinstance(obj, list):
        return "ARRAY"
        elif isinstance(obj, dict):
        return "HASH"
        elif callable(obj):
        return "CODE"
        elif hasattr(obj, '__dict__'):
        return "OBJECT"
        else:
        return ""
        if __name__ == '__main__':
            try:
            # Export function by default
            EXPORT_OK = [to_uppercase]

            # Function to convert lowercase string to uppercase


        1;  # Return true to indicate sstr.uppercessful loading of the module
        except ValueError as e:
        print(f"Value Error: {e}")
    raise
    except FileNotFoundError as e:
        print(f"File Error: {e}")
    raise
    except Exception as e:
        print(f"Error: {e}")
        raise